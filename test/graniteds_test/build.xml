<?xml version="1.0" encoding="UTF-8"?>

<!--
  GRANITE DATA SERVICES
  Copyright (C) 2011 GRANITE DATA SERVICES S.A.S.

  This file is part of Granite Data Services.

  Granite Data Services is free software; you can redistribute it and/or modify
  it under the terms of the GNU Library General Public License as published by
  the Free Software Foundation; either version 2 of the License, or (at your
  option) any later version.
  Granite Data Services is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License
  for more details.

  You should have received a copy of the GNU Library General Public License
  along with this library; if not, see <http://www.gnu.org/licenses/>.
-->

<project name="graniteds-test" default="tests" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    
    <!--
     ! Properties: EDIT THE 'test/env.properties' FILE TO REFLECT YOUR ENVIRONMENT.
     !-->
    <dirname property="gds.dir" file="../." />

    <property file="env.properties"/>
    <property name="gds.lib" value="${gds.dir}/lib"/>
    <property name="gds.build" value="${gds.dir}/build"/>
    <property name="gds.test" value="${gds.dir}/test/graniteds_test"/>
    
    <!--
     ! Build Message.
     !-->
    <echo message="==============================================================================="/>
    <echo message="  Testing GraniteDS ${GDS_VERSION}"/>
    <echo message="  "/>
    <echo message="  $FLEX_HOME = ${FLEX_HOME_TESTS}"/>
    <echo message="  "/>
    <echo message="  $gds.dir = ${gds.dir}"/>
    <echo message="  $gds.lib = ${gds.lib}"/>
    <echo message="  $gds.build = ${gds.build}"/>
    <echo message="==============================================================================="/>

    <!--
     ! Flex SDK tasks (mxmlc, compc, html-wrapper, flexunit).
     !-->
    <taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME_TESTS}/ant/lib/flexTasks.jar" />
    
    <taskdef resource="flexUnitTasks.tasks" classpath="${gds.test}/lib/flexUnitTasks-4.1.0.jar"/>
    
    <!--
     ! Jar dependencies (used conditionally).
     !-->
    <path id="main.jar">
        <fileset dir="${gds.lib}">
            <include name="javax.servlet.jar"/>
        </fileset>
    </path>
    <path id="granite.jar">
        <fileset dir="${gds.build}">
            <include name="granite.jar"/>
        </fileset>
    </path>
    <path id="log4j.jar">
        <fileset dir="${gds.lib}">
            <include name="slf4j-api.jar"/>
            <include name="slf4j-log4j12.jar"/>
            <include name="log4j.jar"/>
        </fileset>
    </path>
    <path id="hibernate.jar">
        <fileset dir="${gds.lib}">
            <include name="jpa-2.0-api.jar"/>
            <include name="hibernate3.jar"/>
            <include name="dom4j.jar"/>
            <include name="antlr-2.7.7.jar"/>
            <include name="asm-1.5.3.jar"/>
            <include name="cglib-2.1_3.jar"/>
            <include name="javassist.jar"/>
            <include name="jta.jar"/>
            <include name="commons-collections.jar"/>
        </fileset>
    </path>
    <path id="hibernate4.jar">
        <fileset dir="${gds.lib}">
            <include name="jpa-2.0-api.jar"/>
            <include name="hibernate-core-4.0.1.jar"/>
            <include name="hibernate-entitymanager-4.0.1.jar"/>
            <include name="hibernate-commons-annotations-3.2.0.Final.jar"/>
            <include name="dom4j.jar"/>
            <include name="antlr-2.7.7.jar"/>
            <include name="asm-1.5.3.jar"/>
            <include name="cglib-2.1_3.jar"/>
            <include name="javassist.jar"/>
            <include name="jta.jar"/>
            <include name="commons-collections.jar"/>
            <include name="jboss-logging.jar"/>
        </fileset>
    </path>
    <path id="hibernate-validator.jar">
        <fileset dir="${gds.lib}">
            <include name="hibernate-validator.jar"/>
            <include name="hibernate-commons-annotations.jar"/>
            <include name="slf4j-api.jar"/>
            <include name="slf4j-jboss-logging.jar"/>
        </fileset>
    </path>
    <path id="granite-hibernate.jar">
        <fileset dir="${gds.build}">
            <include name="granite-hibernate.jar"/>
        </fileset>
    </path>
    <path id="granite-hibernate4.jar">
        <fileset dir="${gds.build}">
            <include name="granite-hibernate4.jar"/>
        </fileset>
    </path>
	
    <path id="spring.jar">
        <fileset dir="${gds.lib}">
        	<include name="aopalliance-1.0.jar"/>
            <include name="asm-3.0.jar"/>
            <include name="commons-collections.jar"/>
            <include name="commons-logging.jar"/>
        	<include name="javax.inject.jar"/>
        	<include name="javax.servlet.jar"/>
        	<include name="apache-activemq.jar"/>
        	<include name="interceptor-api.jar"/>
        	<include name="org.springframework.*.jar"/>
        	<include name="spring-*-3.0.jar"/>
        	<include name="spring-test.jar"/>
    	</fileset>
    </path>
    <path id="granite-spring.jar">
        <fileset dir="${gds.build}">
            <include name="granite-spring.jar"/>
        </fileset>
    </path>
	
    <path id="seam.jar">
        <fileset dir="${gds.lib}">
            <include name="dom4j.jar"/>
            <include name="javassist.jar"/>
            <include name="jboss-seam.jar"/>
            <include name="jboss-seam21.jar"/>
            <include name="jboss-el.jar"/>
            <include name="el-api.jar"/>
            <include name="jsf-api.jar"/>
        </fileset>
    </path>
    <path id="granite-seam.jar">
        <fileset dir="${gds.build}">
            <include name="granite-seam21.jar"/>
        </fileset>
    </path>
	
    <path id="cdi.jar">
        <fileset dir="${gds.lib}">
            <include name="cdi-api.jar"/>
            <include name="weld-*.jar"/>
        	<include name="el-api.jar"/>
        </fileset>
    </path>
    <path id="granite-cdi.jar">
        <fileset dir="${gds.build}">
            <include name="granite-cdi.jar"/>
        </fileset>
    </path>
	
	<path id="openejb.jar">
		<fileset dir="${gds.test}/lib">
			<include name="openejb-*.jar"/>
			<include name="shrinkwrap-*.jar"/>
			<exclude name="*glassfish*.jar"/>
		</fileset>
		<fileset dir="${gds.lib}">
			<include name="weld-*.jar"/>
		</fileset>
	</path>
	<path id="glassfish.jar">
		<fileset dir="${gds.test}/lib">
			<include name="glassfish-embedded-*.jar"/>
			<include name="shrinkwrap-*.jar"/>
			<exclude name="*openejb*.jar"/>
		</fileset>
	</path>
    
    <path id="gds.classpath">
        <pathelement location="${gds.test}/lib/junit-4.8.2.jar"/>
        <path refid="main.jar"/>
        <path refid="log4j.jar"/>
        <path refid="hibernate.jar"/>
        <path refid="hibernate-validator.jar"/>
        <path refid="granite.jar"/>
        <path refid="granite-hibernate.jar"/>
    </path>
    <path id="gds.test.classpath">
        <pathelement location="${gds.test}/lib/junit-4.8.2.jar"/>
        <path refid="main.jar"/>
        <path refid="log4j.jar"/>
        <path refid="granite.jar"/>
    </path>
    <path id="gds.seam.classpath">
        <path refid="seam.jar"/>
        <path refid="granite-seam.jar"/>
    </path>
    <path id="gds.spring.classpath">
        <path refid="spring.jar"/>
        <path refid="granite-spring.jar"/>
    </path>
    <path id="gds.cdi.classpath">
        <path refid="cdi.jar"/>
        <path refid="granite-cdi.jar"/>
    </path>
    <path id="gds.openejb.classpath">
        <path refid="openejb.jar"/>
    </path>
    <path id="gds.glassfish.classpath">
        <path refid="glassfish.jar"/>
    </path>
    <path id="test.classpath">
        <pathelement location="${gds.lib}/hsqldb.jar"/>
    </path>
    <path id="test.classpath.activemq">
    	<fileset dir="${gds.test}/lib">
    		<include name="geronimo*spec*.jar"/>
    	</fileset>
    </path>

    
    <!--
     ! Compile Java sources (unless this script is launched from Eclipse).
     !-->
    <target name="build.javac" depends="resolve" description="Compile Java sources">
    	<!-- First compilation with Hibernate 3 -->
        <mkdir dir="classes"/>
        <mkdir dir="test-reports/java"/>
    	
        <javac destdir="classes" srcdir="java" debug="true"
            target="1.5" source="1.5">
            <classpath>
                <path refid="gds.classpath"/>
                <path refid="gds.seam.classpath"/>
                <path refid="gds.spring.classpath"/>
                <path refid="gds.cdi.classpath"/>
            	<path refid="gds.openejb.classpath"/>
            	<path refid="gds.glassfish.classpath"/>
                <path refid="test.classpath"/>
            	<pathelement location="${gds.lib}/eclipselink.jar"/>
            	<pathelement location="${gds.lib}/datanucleus-core.jar"/>
            	<pathelement location="${gds.lib}/jdo-api.jar"/>
            	<path refid="hibernate4.jar"/>
            </classpath>
        </javac>
        <copy todir="classes">
            <fileset dir="resources">
                <include name="*.xml"/>
                <include name="*.properties"/>
                <include name="WEB-INF/**"/>
                <include name="META-INF/**"/>
            </fileset>
        	<fileset dir="java">
        		<include name="**/*.xml"/>
        	</fileset>
        </copy>
    	<!-- Second compilation with Hibernate 4 -->
        <mkdir dir="classesh4"/>
        <javac destdir="classesh4" srcdir="java" debug="true"
            target="1.5" source="1.5">
            <classpath>
                <path refid="hibernate4.jar"/>
                <path refid="gds.classpath"/>
                <path refid="gds.seam.classpath"/>
                <path refid="gds.spring.classpath"/>
                <path refid="gds.cdi.classpath"/>
                <path refid="gds.openejb.classpath"/>
                <path refid="gds.glassfish.classpath"/>
                <path refid="test.classpath"/>
                <pathelement location="${gds.lib}/eclipselink.jar"/>
                <pathelement location="${gds.lib}/datanucleus-core.jar"/>
                <pathelement location="${gds.lib}/jdo-api.jar"/>
            </classpath>
        </javac>
        <copy todir="classesh4">
            <fileset dir="resources">
                <include name="*.xml"/>
                <include name="*.properties"/>
                <include name="WEB-INF/**"/>
                <include name="META-INF/**"/>
            </fileset>
            <fileset dir="java">
                <include name="**/*.xml"/>
            </fileset>
        </copy>
    </target>
    
    <target name="tests.java" depends="build.javac" description="Run Java tests">
        <junit printsummary="yes" showoutput="false">
            <classpath>
                <path refid="gds.classpath"/>
                <path refid="gds.seam.classpath"/>
                <path refid="test.classpath"/>
                <pathelement path="classes"/>
            </classpath>
            
            <formatter type="xml"/>
            
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                	<include name="**/*Test.java"/>
                	<include name="**/TestJMF*.java"/>
                    <exclude name="**/seam/*Test.java"/>
                    <exclude name="**/spring/*Test.java"/>
                    <exclude name="**/ejb/*Test.java"/>
                    <exclude name="**/cdi/*Test.java"/>
                    <exclude name="**/Hibernate*.java"/>
                	<exclude name="**/EclipseLink*.java"/>
                    <exclude name="**/DataNucleus*.java"/>
                    <exclude name="**/JDODataNucleus*.java"/>
                    <exclude name="**/OpenJpa*.java"/>
                    <exclude name="**/Abstract*.java"/>
                </fileset>
            </batchtest>
        </junit>
    	
    	<antcall target="tests.seam"/>
        <antcall target="tests.spring"/>
        <antcall target="tests.spring.hibernate"/>
        <antcall target="tests.spring.hibernate4"/>
        <antcall target="tests.cdi"/>
    	<antcall target="tests.ejb.openejb"/>
    	<antcall target="tests.ejb.glassfish"/>
        <antcall target="tests.hibernate"/>
        <antcall target="tests.hibernate4"/>
        <antcall target="tests.eclipselink"/>
        <antcall target="tests.openjpa"/>
        <antcall target="tests.datanucleus"/>
        <antcall target="tests.datanucleus.jdo"/>
        
    	<antcall target="tests.reports"/>
    </target>
    
    <target name="tests.reports">
        <junitreport todir="test-reports/java">
            <fileset dir="./test-reports/java">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="test-reports/java"/>
        </junitreport>  
    </target>
    	
    <target name="tests.seam" depends="build.javac">        
        <junit printsummary="yes" showoutput="false">
            <classpath>
                <path refid="gds.classpath"/>
            	<path refid="gds.seam.classpath"/>
                <path refid="test.classpath"/>
                <pathelement path="classes"/>
            </classpath>
            
            <formatter type="xml"/>
            
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                    <include name="**/seam/*Test.java"/>
                    <exclude name="**/Abstract*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    	
    <target name="tests.spring" depends="build.javac">        
        <junit printsummary="yes" showoutput="false">
            <classpath>
                <path refid="gds.classpath"/>
                <path refid="gds.spring.classpath"/>
                <path refid="test.classpath"/>
                <path refid="test.classpath.activemq"/>
                <pathelement path="classes"/>
            </classpath>
            
            <formatter type="xml"/>
            
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                    <include name="**/spring/*Test.java"/>
                    <exclude name="**/spring/Hibernate*Test.java"/>
                    <exclude name="**/Abstract*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
	
	<target name="tests.ejb.openejb" depends="build.javac">		
		<junit printsummary="yes" showoutput="false">
			<sysproperty key="ejb.container.className" value="org.granite.test.tide.ejb.OpenEJBContainer"/>
			
            <classpath>
                <path refid="gds.test.classpath"/>
                <path refid="gds.openejb.classpath"/>
                <path refid="test.classpath"/>
                <pathelement path="classes"/>
            </classpath>
			
			<formatter type="xml"/>
		
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                    <include name="**/ejb/*OpenEJBTestSuite.java"/>
                    <exclude name="**/Abstract*.java"/>
                </fileset>
            </batchtest>
		</junit>			
	</target>
	
	<target name="tests.ejb.glassfish" depends="build.javac">		
		<junit printsummary="yes" showoutput="false">
			<sysproperty key="ejb.container.className" value="org.granite.test.tide.ejb.GlassFishV3Container"/>
			
            <classpath>
                <path refid="gds.test.classpath"/>
                <path refid="gds.glassfish.classpath"/>
                <path refid="test.classpath"/>
                <pathelement path="classes"/>
            </classpath>
			
			<formatter type="xml"/>
		
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                    <include name="**/ejb/*GlassFishV3TestSuite.java"/>
                    <exclude name="**/Abstract*.java"/>
                </fileset>
            </batchtest>
		</junit>			
	</target>
    
    <target name="tests.cdi" depends="build.javac">        
        <junit printsummary="yes" showoutput="false">
            <classpath>
                <path refid="gds.classpath"/>
                <path refid="gds.cdi.classpath"/>
                <path refid="test.classpath"/>
                <pathelement path="classes"/>
            </classpath>
            
            <formatter type="xml"/>
            
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                    <include name="**/cdi/*Test.java"/>
                    <exclude name="**/Abstract*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
        
    <target name="tests.hibernate" depends="build.javac">        
        <junit printsummary="yes" showoutput="false" fork="true">
            <classpath>
                <pathelement location="${gds.test}/lib/junit-4.8.2.jar"/>
                <path refid="main.jar"/>
                <path refid="log4j.jar"/>
                <path refid="hibernate.jar"/>
                <path refid="granite.jar"/>
                <path refid="granite-hibernate.jar"/>
                <pathelement location="${gds.lib}/h2.jar"/>
                <pathelement path="classes"/>
            </classpath>
            
            <formatter type="xml"/>
            
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                    <include name="**/Hibernate3*Test.java"/>
                	<exclude name="**/spring/*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    
    <target name="tests.spring.hibernate" depends="build.javac">        
        <junit printsummary="yes" showoutput="false" fork="true">
            <classpath>
                <pathelement location="${gds.test}/lib/junit-4.8.2.jar"/>
                <path refid="main.jar"/>
                <path refid="log4j.jar"/>
                <path refid="hibernate.jar"/>
            	<path refid="spring.jar"/>
                <path refid="granite.jar"/>
                <path refid="granite-hibernate.jar"/>
                <path refid="granite-spring.jar"/>
                <pathelement location="${gds.lib}/h2.jar"/>
                <pathelement path="classes"/>
            </classpath>
            
            <formatter type="xml"/>
            
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                    <include name="**/spring/Hibernate3*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
        
    <target name="tests.hibernate4" depends="build.javac">        
        <junit printsummary="yes" showoutput="false">
            <classpath>
                <pathelement location="${gds.test}/lib/junit-4.8.2.jar"/>
                <path refid="main.jar"/>
                <path refid="log4j.jar"/>
                <path refid="hibernate4.jar"/>
                <path refid="granite.jar"/>
                <path refid="granite-hibernate4.jar"/>
                <pathelement location="${gds.lib}/h2.jar"/>
                <pathelement path="classesh4"/>
            </classpath>
            
            <formatter type="xml"/>
            
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                    <include name="**/Hibernate4*Test.java"/>
                    <exclude name="**/spring/*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    
    <target name="tests.spring.hibernate4" depends="build.javac">        
        <junit printsummary="yes" showoutput="false" fork="true">
            <classpath>
                <pathelement location="${gds.test}/lib/junit-4.8.2.jar"/>
                <path refid="main.jar"/>
                <path refid="log4j.jar"/>
                <path refid="hibernate4.jar"/>
                <path refid="spring.jar"/>
                <path refid="granite.jar"/>
                <path refid="granite-hibernate4.jar"/>
                <path refid="granite-spring.jar"/>
                <pathelement location="${gds.lib}/h2.jar"/>
                <pathelement path="classesh4"/>
            </classpath>
            
            <formatter type="xml"/>
            
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                    <include name="**/spring/Hibernate4*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
        
    <target name="tests.eclipselink" depends="build.javac">        
        <junit printsummary="yes" showoutput="false" fork="true" forkmode="once">
        	<jvmarg value="-javaagent:${gds.lib}/eclipselink.jar"/>
        	
            <classpath>
                <pathelement location="${gds.test}/lib/junit-4.8.2.jar"/>
                <path refid="main.jar"/>
                <pathelement location="${gds.lib}/jpa-2.0-api.jar"/>
                <pathelement location="${gds.lib}/jta.jar"/>
                <pathelement location="${gds.lib}/eclipselink.jar"/>
                <path refid="granite.jar"/>
                <pathelement location="${gds.build}/granite-eclipselink.jar"/>
                <pathelement location="${gds.lib}/h2.jar"/>
                <pathelement path="classes"/>
            </classpath>
            
            <formatter type="xml"/>
            
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                    <include name="**/EclipseLink*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
        
    <target name="tests.openjpa" depends="build.javac">        
        <junit printsummary="yes" showoutput="false" fork="true" forkmode="once">
    	   <jvmarg value="-javaagent:${gds.lib}/openjpa.jar"/>
        	
            <classpath>
                <pathelement location="${gds.test}/lib/junit-4.8.2.jar"/>
                <path refid="main.jar"/>
                <pathelement location="${gds.lib}/jpa-2.0-api.jar"/>
                <pathelement location="${gds.lib}/jta.jar"/>
                <pathelement location="${gds.lib}/openjpa.jar"/>
                <pathelement location="${gds.lib}/commons-lang.jar"/>
                <pathelement location="${gds.lib}/commons-logging.jar"/>
                <pathelement location="${gds.lib}/commons-collections.jar"/>
                <pathelement location="${gds.lib}/serp.jar"/>
                <path refid="granite.jar"/>
                <pathelement location="${gds.build}/granite-openjpa.jar"/>
                <pathelement location="${gds.lib}/hsqldb.jar"/>
                <pathelement path="classes"/>
            </classpath>
            
            <formatter type="xml"/>
            
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                    <include name="**/OpenJpa*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
        
    <target name="tests.datanucleus" depends="build.javac">        
        <junit printsummary="yes" showoutput="false" fork="true" forkmode="once">
        	<jvmarg value="-javaagent:${gds.lib}/datanucleus-core.jar=-api=JPA,org.granite.test.externalizers"/>
        	
             <classpath>
                 <pathelement location="${gds.test}/lib/junit-4.8.2.jar"/>
                 <path refid="main.jar"/>
                 <pathelement location="${gds.lib}/jpa-2.0-api.jar"/>
                 <pathelement location="${gds.lib}/jdo-api.jar"/>
                 <pathelement location="${gds.lib}/jta.jar"/>
                 <pathelement location="${gds.lib}/datanucleus-core.jar"/>
                 <pathelement location="${gds.lib}/datanucleus-rdbms.jar"/>
                 <pathelement location="${gds.lib}/datanucleus-jpa.jar"/>
                 <pathelement location="${gds.lib}/asm-3.0.jar"/>
                 <path refid="granite.jar"/>
                 <pathelement location="${gds.build}/granite-datanucleus.jar"/>
                 <pathelement location="${gds.lib}/h2.jar"/>
                 <pathelement path="classes"/>
             </classpath>
            
            <formatter type="xml"/>
            
            <batchtest todir="test-reports/java" fork="true">
                <fileset dir="java">
                    <include name="**/DataNucleus*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
	    
	<target name="tests.datanucleus.jdo" depends="build.javac">        
	    <junit printsummary="yes" showoutput="false" fork="true" forkmode="once">
	    	<jvmarg value="-javaagent:${gds.lib}/datanucleus-core.jar=-api=JDO,org.granite.test.externalizers"/>
	    	
	         <classpath>
	             <pathelement location="${gds.test}/lib/junit-4.8.2.jar"/>
	             <path refid="main.jar"/>
	             <pathelement location="${gds.lib}/jdo-api.jar"/>
	             <pathelement location="${gds.lib}/jta.jar"/>
	             <pathelement location="${gds.lib}/datanucleus-core.jar"/>
	             <pathelement location="${gds.lib}/datanucleus-rdbms.jar"/>
                     <pathelement location="${gds.lib}/datanucleus-jdo.jar"/>
	             <pathelement location="${gds.lib}/asm-3.0.jar"/>
	             <path refid="granite.jar"/>
	             <pathelement location="${gds.build}/granite-datanucleus.jar"/>
	             <pathelement location="${gds.lib}/h2.jar"/>
	             <pathelement path="classes"/>
	         </classpath>
	        
	        <formatter type="xml"/>
	        
	        <batchtest todir="test-reports/java" fork="true">
	            <fileset dir="java">
	                <include name="**/JDODataNucleus*Test.java"/>
	            </fileset>
	        </batchtest>
	    </junit>
	</target>    
	
    <!--
     ! Build swf (if swf is out of date).
     !-->
    <target name="build.mxmlc" description="Build Flex tests swf">
        <mkdir dir="${gds.test}/swf"/>
        <antcall target="build.module">
            <param name="moduleName" value="TestRunner.mxml"/>
            <param name="targetName" value="tests.swf"/>
        </antcall>
        <antcall target="build.module">
            <param name="moduleName" value="TestModule.mxml"/>
            <param name="targetName" value="module.swf"/>
        </antcall>
        <antcall target="build.module">
            <param name="moduleName" value="TestModule2.mxml"/>
            <param name="targetName" value="module2.swf"/>
        </antcall>
    </target>

    <target name="build.module" description="Build Flex tests swf">
        <mkdir dir="${gds.test}/swf"/>
        <mxmlc
            output="${gds.test}/swf/${targetName}"
            file="${gds.test}/flex/${moduleName}"
            use-network="false"
            debug="true">

            <load-config filename="${FLEX_HOME_TESTS}/frameworks/flex-config.xml"/>

            <source-path path-element="${FLEX_HOME_TESTS}/frameworks"/>
            <source-path path-element="${gds.test}/flex"/>

            <!-- Standard annotations -->
            <keep-as3-metadata name="Bindable"/>
            <keep-as3-metadata name="Managed"/>
            <keep-as3-metadata name="ChangeEvent"/>
            <keep-as3-metadata name="NonCommittingChangeEvent"/>
            <keep-as3-metadata name="Transient"/>

            <!-- Tide annotations -->
            <keep-as3-metadata name="Id"/>
            <keep-as3-metadata name="Version"/>
            <keep-as3-metadata name="Lazy"/>
            <keep-as3-metadata name="Name"/>
            <keep-as3-metadata name="In"/>
            <keep-as3-metadata name="Inject"/>
            <keep-as3-metadata name="Out"/>
            <keep-as3-metadata name="Produces"/>
            <keep-as3-metadata name="ManagedEvent"/>
            <keep-as3-metadata name="Observer"/>
            <keep-as3-metadata name="PostConstruct"/>
            <keep-as3-metadata name="Destroy"/>

            <!-- FlexUnit annotations -->
            <keep-as3-metadata name="Test"/>
            <keep-as3-metadata name="Ignore"/>
            <keep-as3-metadata name="Suite"/>
            <keep-as3-metadata name="RunWith"/>

            <!-- All granite-essentials.swc classes are included in the output swf -->
            <compiler.include-libraries dir="${gds.build}" append="true">
                <include name="granite-essentials.swc" />
            </compiler.include-libraries>

            <!-- Actually used only granite.swc classes are included in the output swf -->
            <compiler.library-path dir="${gds.build}" append="true">
                <include name="granite.swc"/>
            </compiler.library-path>

            <compiler.library-path dir="${gds.test}/libs" append="true">
                <include name="flexunit*-4.1.0.swc"/>
            </compiler.library-path>

            <compiler.headless-server>true</compiler.headless-server>
        </mxmlc>
    </target>

    <target name="tests.flex" depends="build.mxmlc" description="Run Flex tests">
        <mkdir dir="${gds.test}/test-reports/flex"/>
        <flexunit swf="${gds.test}/swf/tests.swf" todir="${gds.test}/test-reports/flex" headless="true" localTrusted="true" verbose="true"/>
        
        <junitreport todir="${gds.test}/test-reports/flex">
            <fileset dir="${gds.test}/test-reports/flex">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${gds.test}/test-reports/flex"/>
        </junitreport>  
    </target>
    
    <target name="tests" depends="tests.java,tests.flex" description="Run tests"/>
	
	
	<target name="resolve">
		<ivy:resolve/>
				
		<ivy:retrieve pattern="${gds.test}/lib/[artifact].[ext]" type="jar"/>
	</target>
	
    <!--
     ! Clean.
     !-->
    <target name="clean">
        <delete dir="classes"/>
        <delete dir="classesh4"/>
        <delete dir="swf"/>
        <delete dir="test-reports"/>
    </target>

</project>
